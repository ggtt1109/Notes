1.“^”表示字符串的开始，如果设置了 RegExp 对象的Multiline 属性，“^” 也匹配 ’ \n’ 或 ’\r’ 之后的位置。
2. “ $” 表示字符串的结束，如果设置了 RegExp 对象的Multiline 属性，“ $” 也匹配 ’\n’ 或 ’\r’ 之前的位置。
3.“\” 转义符，将下一个字符标记为一个特殊字符、或一个原义字符、或一个后向引用、或一个八进制转义符。，\u八进制表示十六进制的常量， 
4.\b 匹配一个单词边界，也就是指单词和空格间的位置。 
5.\B 匹配非单词边界。 
6.\cx 匹配由x指明的控制字符。 
7.\d 匹配一个数字字符。等价于 [0-9]。 
8.\D 匹配一个非数字字符。等价于 [^0-9]。 
9.\f 匹配一个换页符。等价于 \x0c 和 \cL。
10.\n 匹配一个换行符。等价于 \x0a 和 \cJ。
11.\r 匹配一个回车符。等价于 \x0d 和 \cM。 
12.\s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。 
13.\S 匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。 
14.\t 匹配一个制表符。等价于 \x09 和 \cI。 
15.\v 匹配一个垂直制表符。等价于 \x0b 和 \cK。 
16.\w 匹配包括下划线的任何单词字符。等价于[A-Za-z0-9]。 
17.\W 匹配任何非单词字符。等价于[^A-Za-z0-9_]。 
18.\xn 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。 
19.\num 匹配 num，其中num是一个正整数。对所获取的匹配的引用。 
20.\n 标识一个八进制转义值或一个后向引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为后向引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。 
21.\nm 标识一个八进制转义值或一个后向引用。如果 \nm 之前至少有is preceded by at least nm 个获取得子表达式，则 nm 为后向引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的后向引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。 
22.\nml 如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。 
23.\un 匹配 n，其中 n 是一个用四个十六进制数字表示的Unicode字符。
24.“*”匹配前面的子表达式0次或多次。
25.“+”匹配前面的子表达式1次或多次，等价于 {1,}。
26.“？”匹配前面的子表达式0次或1次，等价于 {0,1}。
27.“{n}”n是一个非负整数，匹配确定的n 次。 
28.“{n,}”n是一个非负整数，至少匹配n 次。 
29.“{n,m}”m和 n均为非负整数，其中n <= m。最少匹配 n次而且最多匹配 m次。在逗号和两个数之间不能有空格。
30.“?” 当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。
31.“.”匹配除 "\n" 之外的任何单个字符。要匹配包括 ’\n’ 在内的任何字符，请使用‘[.\n]’的模式。
32. (pattern)  匹配pattern 并获取这一匹配。 
33. (?:pattern) 匹配pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。 
34. (?=pattern) 正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。 
35. (?!pattern) 负向预查，与(?=pattern)作用相反。 
36.x|y 匹配 x 或 y。 
37.[xyz] 字符集合。 
38.[^xyz] 负值字符集合。
39.[a-z] 字符范围，匹配指定范围内的任意字符。
40.[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符。、

1.中文字符： [u4e00-u9fa5] 
2.中文：^[\u0391-\uFFE5]+$ 
3.双字节字符(包括汉字在内)：[^x00-xff] 
4.英文字符串：^[A-Za-z]+$ 
5.英文大写串：^[A-Z]+$ 
6.英文小写串：^[a-z]+$ 
7.英文字符数字串：^[A-Za-z0-9]+$ 
8.英文+数字+下划线串：^\w+$ 
9.匹配空行的正则表达式：n[s| ]*r 
10.匹配HTML标记的正则表达式：/<(.*)>.*</1>|<(.*) />/ 
11.匹配首尾空格的正则表达式：(^s*)|(s*$) 
12.匹配Email地址的正则表达式：w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)* 
13.匹配网址URL的正则表达式：http://([w-]+.)+[w-]+(/[w- ./?%&=]*)? 
14.非负整数：^\d+$ 
15.正整数：^[0-9]*[1-9][0-9]*$ 
16.非正整数：^((-\d+)|(0+))$ 
17.负整数：^-[0-9]*[1-9][0-9]*$ 
18.整数：^-?\d+$ 
19.非负浮点数：^\d+(\.\d+)?$ 
20.浮点数：
^((0-9)+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$ 
21.非正浮点数：^((-\d+\.\d+)?)|(0+(\.0+)?))$ 
22.负浮点数：^(-((正浮点数正则式)))$ 
23.邮政编码：^[1-9]\d{5}$ 
24.电话号码：
^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$ 
25.手机号码：^((\(\d{2,3}\))|(\d{3}\-))?13\d{9}$ 
26.匹配空行：\n[\s| ]*\r 
27.提取信息中的网络链接：(h|H)(r|R)(e|E)(f|F) *= *('|")?(\w|\\|\/|\.)+('|"| *|>)? 
28.提取信息中的邮件地址：
\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)* 
29.提取信息中的图片链接：(s|S)(r|R)(c|C) *= *('|")?(\w|\\|\/|\.)+('|"| *|>)? 
30.提取信息中的IP地址：(\d+)\.(\d+)\.(\d+)\.(\d+) 
31.提取信息中的中国手机号码：(86)*0*13\d{9} 
32. 提取信息中的中国固定电话号码：(\(\d{3,4}\)|\d{3,4}-|\s)?\d{8} 
33.提取信息中的中国电话号码（包括移动和固定电话）：
(\(\d{3,4}\)|\d{3,4}-|\s)?\d{7,14} 
34.提取信息中的中国邮政编码：[1-9]{1}(\d+){5} 
35.提取信息中的浮点数（即小数）：(-?\d*)\.?\d+ 
36.提取信息中的任何数字 ：(-?\d*)(\.\d+)?  
37.电话区号：/^0\d{2,3}$/ 
38.腾讯QQ号：^[1-9]*[1-9][0-9]*$ 
39.帐号(字母开头，允许5-16字节，允许字母数字下划线)：
^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 
40.中文、英文、数字及下划线：^[\u4e00-\u9fa5_a-zA-Z0-9]+$
41.年-月-日 
/^(d{2}|d{4})-((0([1-9]{1}))|(1[1|2]))-(([0-2]([1-9]{1}))|(3[0|1]))$/    
42.月/日/年   
/^((0([1-9]{1}))|(1[1|2]))/(([0-2]([1-9]{1}))|(3[0|1]))/(d{2}|d{4})$/   
43.利用正则表达式限制网页表单里的文本框输入内容：
^http:\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&_~`@[\]\':+!]*([^<>\"\"])*$  
44.用正则表达式限制只能输入中文：
onkeyup="value=value.replace(/[^u4E00-u9FA5]/g,'')"onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^u4E00-u9FA5]/g,''))" 
45.用正则表达式限制只能输入全角字符：
   onkeyup="value=value.replace(/[^uFF00-uFFFF]/g,'')" onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^uFF00-uFFFF]/g,''))" 
46.用正则表达式限制只能输入数 字：
onkeyup="value=value.replace(/[^d]/g,'') onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^d]/g,''))" 
57.用正则表达式限制只能输入数字和英文：
onkeyup="value=value.replace(/[W]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^d]/g,''))" 
48.sql语句：^(select|drop|delete|create|update|insert).*$ 

